CREATE TABLE TRN_FOLDERS
(
TRNF_ID INTEGER NOT NULL ,
FOLDER_NAME CHARACTER VARYING(32) NULL,
SYSTEM_ID_REMOVE INTEGER NOT NULL ,
SYSTEM_ID_SEARCH CHARACTER VARYING(120) NULL,
FOLDER_CATEGORY CHARACTER VARYING(32) NOT NULL ,
PARENT_TRNF_ID INTEGER NOT NULL ,
FOLDER CHARACTER VARYING(100) NOT NULL ,
SEARCH CHARACTER VARYING(100) NOT NULL ,
ACTUAL CHARACTER VARYING(256) NOT NULL ,
DOCUMENT_TYPE CHARACTER VARYING(32) NULL,
DTG_CODE CHARACTER VARYING(128) NULL,
EMAIL_DTT CHARACTER VARYING(128) NULL,
EMAIL_FOLDER CHARACTER VARYING(128) NULL, CREATED_BY text NOT NULL, 
 CREATED_BY_NAME text ,
 CREATED_DATE timestamp without time zone NOT NULL,
 MODIFIED_BY text,
 MODIFIED_BY_NAME text,
 MODIFIED_DATE timestamp without time zone,
 SYSTEM_ID TEXT, 
 SYSTEM_NAME text, 
 PRCT_ID TEXT,
 CREATED_BY_STS_ID TEXT, 
 MODIFIED_BY_STS_ID TEXT, 
 STATUS TEXT,
 PROCESS_STATUS TEXT ,
 DT_CODE TEXT ,
 DT_DESCRIPTION TEXT ,
 DTT_CODE TEXT ,
 DTT_DESCRIPTION TEXT ,
 VERSION_NO integer DEFAULT 0 
 );
CREATE SEQUENCE SEQ_TRN_FOLDERS
INCREMENT 1
MINVALUE 1
MAXVALUE 9223372036854775807
START 1 
CACHE 20;


ALTER TABLE TRN_FOLDERS
 ALTER COLUMN TRNF_ID  SET DEFAULT nextval('SEQ_TRN_FOLDERS');


CREATE OR REPLACE FUNCTION TRG_TRN_FOLDERS()
RETURNS trigger AS
$BODY$
BEGIN
NEW.TRG_TRN_FOLDERS=CURRENT_TIMESTAMP;RETURN NEW;
END $BODY$
LANGUAGE plpgsql VOLATILE
COST 100;
ALTER TABLE TRN_FOLDERS ADD CONSTRAINT TRN_FOLDERS_pkey primary key(TRNF_ID);

 CREATE TRIGGER TRG_HST_TRN_FOLDERS
 BEFORE INSERT OR UPDATE 
 ON TRN_FOLDERS
 FOR EACH ROW 
 EXECUTE PROCEDURE FN_TRG_HST_TRAN_DATA() ;


ALTER TABLE TRN_FOLDERS  DISABLE TRIGGER TRG_HST_TRN_FOLDERS ;
CREATE TABLE TRN_ATMT_ACCTG_SEARCH
(
TRNAAS_ID INTEGER NOT NULL ,
FINANCIAL_YEAR CHARACTER VARYING(4) NOT NULL ,
CATEGORY CHARACTER VARYING(32) NOT NULL , CREATED_BY text NOT NULL, 
 CREATED_BY_NAME text ,
 CREATED_DATE timestamp without time zone NOT NULL,
 MODIFIED_BY text,
 MODIFIED_BY_NAME text,
 MODIFIED_DATE timestamp without time zone,
 SYSTEM_ID TEXT, 
 SYSTEM_NAME text, 
 PRCT_ID TEXT,
 CREATED_BY_STS_ID TEXT, 
 MODIFIED_BY_STS_ID TEXT, 
 STATUS TEXT,
 PROCESS_STATUS TEXT ,
 DT_CODE TEXT ,
 DT_DESCRIPTION TEXT ,
 DTT_CODE TEXT ,
 DTT_DESCRIPTION TEXT ,
 VERSION_NO integer DEFAULT 0 
 );
CREATE SEQUENCE SEQ_TRN_ATMT_ACCTG_SEARCH
INCREMENT 1
MINVALUE 1
MAXVALUE 9223372036854775807
START 1 
CACHE 20;


ALTER TABLE TRN_ATMT_ACCTG_SEARCH
 ALTER COLUMN TRNAAS_ID  SET DEFAULT nextval('SEQ_TRN_ATMT_ACCTG_SEARCH');


CREATE OR REPLACE FUNCTION TRG_TRN_ATMT_ACCTG_SEARCH()
RETURNS trigger AS
$BODY$
BEGIN
NEW.TRG_TRN_ATMT_ACCTG_SEARCH=CURRENT_TIMESTAMP;RETURN NEW;
END $BODY$
LANGUAGE plpgsql VOLATILE
COST 100;
ALTER TABLE TRN_ATMT_ACCTG_SEARCH ADD CONSTRAINT TRN_ATMT_ACCTG_SEARCH_pkey primary key(TRNAAS_ID);

 CREATE TRIGGER TRG_HST_TRN_ATMT_ACCTG_SEARCH
 BEFORE INSERT OR UPDATE 
 ON TRN_ATMT_ACCTG_SEARCH
 FOR EACH ROW 
 EXECUTE PROCEDURE FN_TRG_HST_TRAN_DATA() ;


ALTER TABLE TRN_ATMT_ACCTG_SEARCH  DISABLE TRIGGER TRG_HST_TRN_ATMT_ACCTG_SEARCH ;
CREATE TABLE TRN_ATMT_DEFAULT_SEARCH
(
DTT_DAS_ID INTEGER NOT NULL ,
DOMAIN CHARACTER VARYING(64) NOT NULL ,
CATEGORY CHARACTER VARYING(64) NOT NULL ,
OWNER CHARACTER VARYING(32) NOT NULL ,
DESC_TEXT CHARACTER VARYING(64) NOT NULL ,
DOC_DATE TIMESTAMP WITHOUT TIME ZONE NOT NULL , CREATED_BY text NOT NULL, 
 CREATED_BY_NAME text ,
 CREATED_DATE timestamp without time zone NOT NULL,
 MODIFIED_BY text,
 MODIFIED_BY_NAME text,
 MODIFIED_DATE timestamp without time zone,
 SYSTEM_ID TEXT, 
 SYSTEM_NAME text, 
 PRCT_ID TEXT,
 CREATED_BY_STS_ID TEXT, 
 MODIFIED_BY_STS_ID TEXT, 
 STATUS TEXT,
 PROCESS_STATUS TEXT ,
 DT_CODE TEXT ,
 DT_DESCRIPTION TEXT ,
 DTT_CODE TEXT ,
 DTT_DESCRIPTION TEXT ,
 VERSION_NO integer DEFAULT 0 
 );
CREATE SEQUENCE SEQ_TRN_ATMT_DEFAULT_SEARCH
INCREMENT 1
MINVALUE 1
MAXVALUE 9223372036854775807
START 1 
CACHE 20;


ALTER TABLE TRN_ATMT_DEFAULT_SEARCH
 ALTER COLUMN DTT_DAS_ID  SET DEFAULT nextval('SEQ_TRN_ATMT_DEFAULT_SEARCH');


CREATE OR REPLACE FUNCTION TRG_TRN_ATMT_DEFAULT_SEARCH()
RETURNS trigger AS
$BODY$
BEGIN
NEW.TRG_TRN_ATMT_DEFAULT_SEARCH=CURRENT_TIMESTAMP;RETURN NEW;
END $BODY$
LANGUAGE plpgsql VOLATILE
COST 100;
ALTER TABLE TRN_ATMT_DEFAULT_SEARCH ADD CONSTRAINT TRN_ATMT_DEFAULT_SEARCH_pkey primary key(DTT_DAS_ID);

 CREATE TRIGGER TRG_HST_TRN_ATMT_DEFAULT_SEARCH
 BEFORE INSERT OR UPDATE 
 ON TRN_ATMT_DEFAULT_SEARCH
 FOR EACH ROW 
 EXECUTE PROCEDURE FN_TRG_HST_TRAN_DATA() ;


ALTER TABLE TRN_ATMT_DEFAULT_SEARCH  DISABLE TRIGGER TRG_HST_TRN_ATMT_DEFAULT_SEARCH ;
CREATE TABLE TRN_SRCH_PF
(
TSPF_ID INTEGER NOT NULL ,
PF_STAFF_PRNL_NO INTEGER NULL,
PF_NAME CHARACTER VARYING(128) NULL,
PF_DESIGNATION CHARACTER VARYING(128) NULL,
PF_DATE TIMESTAMP WITHOUT TIME ZONE NULL, CREATED_BY text NOT NULL, 
 CREATED_BY_NAME text ,
 CREATED_DATE timestamp without time zone NOT NULL,
 MODIFIED_BY text,
 MODIFIED_BY_NAME text,
 MODIFIED_DATE timestamp without time zone,
 SYSTEM_ID TEXT, 
 SYSTEM_NAME text, 
 PRCT_ID TEXT,
 CREATED_BY_STS_ID TEXT, 
 MODIFIED_BY_STS_ID TEXT, 
 STATUS TEXT,
 PROCESS_STATUS TEXT ,
 DT_CODE TEXT ,
 DT_DESCRIPTION TEXT ,
 DTT_CODE TEXT ,
 DTT_DESCRIPTION TEXT ,
 VERSION_NO integer DEFAULT 0 
 );
CREATE SEQUENCE SEQ_TRN_SRCH_PF
INCREMENT 1
MINVALUE 1
MAXVALUE 9223372036854775807
START 1 
CACHE 20;


ALTER TABLE TRN_SRCH_PF
 ALTER COLUMN TSPF_ID  SET DEFAULT nextval('SEQ_TRN_SRCH_PF');


CREATE OR REPLACE FUNCTION TRG_TRN_SRCH_PF()
RETURNS trigger AS
$BODY$
BEGIN
NEW.TRG_TRN_SRCH_PF=CURRENT_TIMESTAMP;RETURN NEW;
END $BODY$
LANGUAGE plpgsql VOLATILE
COST 100;
ALTER TABLE TRN_SRCH_PF ADD CONSTRAINT TRN_SRCH_PF_pkey primary key(TSPF_ID);

 CREATE TRIGGER TRG_HST_TRN_SRCH_PF
 BEFORE INSERT OR UPDATE 
 ON TRN_SRCH_PF
 FOR EACH ROW 
 EXECUTE PROCEDURE FN_TRG_HST_TRAN_DATA() ;


ALTER TABLE TRN_SRCH_PF  DISABLE TRIGGER TRG_HST_TRN_SRCH_PF ;
CREATE TABLE TRN_SRCH_JA
(
TSJA_ID INTEGER NOT NULL , CREATED_BY text NOT NULL, 
 CREATED_BY_NAME text ,
 CREATED_DATE timestamp without time zone NOT NULL,
 MODIFIED_BY text,
 MODIFIED_BY_NAME text,
 MODIFIED_DATE timestamp without time zone,
 SYSTEM_ID TEXT, 
 SYSTEM_NAME text, 
 PRCT_ID TEXT,
 CREATED_BY_STS_ID TEXT, 
 MODIFIED_BY_STS_ID TEXT, 
 STATUS TEXT,
 PROCESS_STATUS TEXT ,
 DT_CODE TEXT ,
 DT_DESCRIPTION TEXT ,
 DTT_CODE TEXT ,
 DTT_DESCRIPTION TEXT ,
 VERSION_NO integer DEFAULT 0 
 );
CREATE SEQUENCE SEQ_TRN_SRCH_JA
INCREMENT 1
MINVALUE 1
MAXVALUE 9223372036854775807
START 1 
CACHE 20;


ALTER TABLE TRN_SRCH_JA
 ALTER COLUMN TSJA_ID  SET DEFAULT nextval('SEQ_TRN_SRCH_JA');


CREATE OR REPLACE FUNCTION TRG_TRN_SRCH_JA()
RETURNS trigger AS
$BODY$
BEGIN
NEW.TRG_TRN_SRCH_JA=CURRENT_TIMESTAMP;RETURN NEW;
END $BODY$
LANGUAGE plpgsql VOLATILE
COST 100;
ALTER TABLE TRN_SRCH_JA ADD CONSTRAINT TRN_SRCH_JA_pkey primary key(TSJA_ID);

 CREATE TRIGGER TRG_HST_TRN_SRCH_JA
 BEFORE INSERT OR UPDATE 
 ON TRN_SRCH_JA
 FOR EACH ROW 
 EXECUTE PROCEDURE FN_TRG_HST_TRAN_DATA() ;


ALTER TABLE TRN_SRCH_JA  DISABLE TRIGGER TRG_HST_TRN_SRCH_JA ;
CREATE TABLE TRNA_QUESTIONS
(
TRNKQ_ID INTEGER NOT NULL ,
Q_TEXT CHARACTER VARYING(4000) NULL,
TRNA_ID CHARACTER VARYING(20) NOT NULL , CREATED_BY text NOT NULL, 
 CREATED_BY_NAME text ,
 CREATED_DATE timestamp without time zone NOT NULL,
 MODIFIED_BY text,
 MODIFIED_BY_NAME text,
 MODIFIED_DATE timestamp without time zone,
 SYSTEM_ID TEXT, 
 SYSTEM_NAME text, 
 PRCT_ID TEXT,
 CREATED_BY_STS_ID TEXT, 
 MODIFIED_BY_STS_ID TEXT, 
 STATUS TEXT,
 PROCESS_STATUS TEXT ,
 DT_CODE TEXT ,
 DT_DESCRIPTION TEXT ,
 DTT_CODE TEXT ,
 DTT_DESCRIPTION TEXT ,
 VERSION_NO integer DEFAULT 0 
 );
CREATE SEQUENCE SEQ_TRNA_QUESTIONS
INCREMENT 1
MINVALUE 1
MAXVALUE 9223372036854775807
START 1 
CACHE 20;


ALTER TABLE TRNA_QUESTIONS
 ALTER COLUMN TRNKQ_ID  SET DEFAULT nextval('SEQ_TRNA_QUESTIONS');


CREATE OR REPLACE FUNCTION TRG_TRNA_QUESTIONS()
RETURNS trigger AS
$BODY$
BEGIN
NEW.TRG_TRNA_QUESTIONS=CURRENT_TIMESTAMP;RETURN NEW;
END $BODY$
LANGUAGE plpgsql VOLATILE
COST 100;
ALTER TABLE TRNA_QUESTIONS ADD CONSTRAINT TRNA_QUESTIONS_pkey primary key(TRNKQ_ID);

 CREATE TRIGGER TRG_HST_TRNA_QUESTIONS
 BEFORE INSERT OR UPDATE 
 ON TRNA_QUESTIONS
 FOR EACH ROW 
 EXECUTE PROCEDURE FN_TRG_HST_TRAN_DATA() ;


ALTER TABLE TRNA_QUESTIONS  DISABLE TRIGGER TRG_HST_TRNA_QUESTIONS ;
CREATE TABLE TRNAQ_ANSWERS
(
TRNKQA_ID INTEGER NOT NULL ,
A_TEXT CHARACTER VARYING(2048) NULL,
TRNKQ_ID INTEGER NOT NULL , CREATED_BY text NOT NULL, 
 CREATED_BY_NAME text ,
 CREATED_DATE timestamp without time zone NOT NULL,
 MODIFIED_BY text,
 MODIFIED_BY_NAME text,
 MODIFIED_DATE timestamp without time zone,
 SYSTEM_ID TEXT, 
 SYSTEM_NAME text, 
 PRCT_ID TEXT,
 CREATED_BY_STS_ID TEXT, 
 MODIFIED_BY_STS_ID TEXT, 
 STATUS TEXT,
 PROCESS_STATUS TEXT ,
 DT_CODE TEXT ,
 DT_DESCRIPTION TEXT ,
 DTT_CODE TEXT ,
 DTT_DESCRIPTION TEXT ,
 VERSION_NO integer DEFAULT 0 
 );
CREATE SEQUENCE SEQ_TRNAQ_ANSWERS
INCREMENT 1
MINVALUE 1
MAXVALUE 9223372036854775807
START 1 
CACHE 20;


ALTER TABLE TRNAQ_ANSWERS
 ALTER COLUMN TRNKQA_ID  SET DEFAULT nextval('SEQ_TRNAQ_ANSWERS');


CREATE OR REPLACE FUNCTION TRG_TRNAQ_ANSWERS()
RETURNS trigger AS
$BODY$
BEGIN
NEW.TRG_TRNAQ_ANSWERS=CURRENT_TIMESTAMP;RETURN NEW;
END $BODY$
LANGUAGE plpgsql VOLATILE
COST 100;
ALTER TABLE TRNAQ_ANSWERS ADD CONSTRAINT TRNAQ_ANSWERS_pkey primary key(TRNKQA_ID);

 CREATE TRIGGER TRG_HST_TRNAQ_ANSWERS
 BEFORE INSERT OR UPDATE 
 ON TRNAQ_ANSWERS
 FOR EACH ROW 
 EXECUTE PROCEDURE FN_TRG_HST_TRAN_DATA() ;


ALTER TABLE TRNAQ_ANSWERS  DISABLE TRIGGER TRG_HST_TRNAQ_ANSWERS ;
